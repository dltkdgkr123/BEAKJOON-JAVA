import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Collections;
import java.util.LinkedList;
import java.util.PriorityQueue;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub

		int answer = 0;
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		
		PriorityQueue<Integer> Nq = new PriorityQueue<>(Collections.reverseOrder());
		Queue<Integer> Mq = new LinkedList<>();
		
		int N = Integer.parseInt(st.nextToken());
		int M = Integer.parseInt(st.nextToken());
		
		st = new StringTokenizer(br.readLine());
		for(int i=0;i<N;i++)
			Nq.offer(Integer.parseInt(st.nextToken()));
		
		st = new StringTokenizer(br.readLine());
		for(int i=0;i<M;i++)
			Mq.offer(Integer.parseInt(st.nextToken()));
		
		while(!Mq.isEmpty()) {
			
			if(Mq.peek()>Nq.peek())
				break;
			
			Nq.offer(Nq.poll() - Mq.poll());
		}
		
		if(Mq.isEmpty())
			answer = 1;
		
		System.out.println(answer);
	}

}
