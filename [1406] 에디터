import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Stack;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		StringTokenizer st = null;
		String s = br.readLine();
		int len = Integer.parseInt(br.readLine());
		
		Stack<Character> stringStack = new Stack<>();		
		for(int i=0; i<s.length(); i++)
			stringStack.push(s.charAt(i));

		Stack<Character> answerStack = new Stack<>();

		for(int i=0; i<len; i++) {
			st = new StringTokenizer(br.readLine());
			
			switch(st.nextToken().charAt(0)) {
			case 'L' : 
				if(!stringStack.isEmpty())
				answerStack.push(stringStack.pop());
				break;
			
			case 'D' :
				if(!answerStack.isEmpty())
					stringStack.push(answerStack.pop());
				break;
				
			case 'B' :
				if(!stringStack.isEmpty())
				stringStack.pop();
				break;
			
			case 'P' : stringStack.push(st.nextToken().charAt(0));
				break;
			}
		}
		
		while(!stringStack.isEmpty())
			answerStack.push(stringStack.pop());
		
		while(!answerStack.isEmpty())
			bw.write(answerStack.pop());
		
		bw.flush();
		bw.close();
	}
}
